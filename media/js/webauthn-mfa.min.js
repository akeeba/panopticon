function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _iterableToArray(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var akeeba=akeeba||{};akeeba.MFA=akeeba.MFA||{},akeeba.MFA.webauthn=akeeba.MFA.webauthn||{authData:null},akeeba.MFA.webauthn.arrayToBase64String=function(b){return btoa(String.fromCharCode.apply(String,_toConsumableArray(b)))},akeeba.MFA.webauthn.base64url2base64=function(a){var b=a.replace(/-/g,"+").replace(/_/g,"/"),c=b.length%4;if(c){if(1===c)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");b+=Array(5-c).join("=")}return b},akeeba.MFA.webauthn.setUp=function(a){if(a.preventDefault(),!("credentials"in navigator))return alert(akeeba.System.Text._("PANOPTICON_MFA_PASSKEYS_ERR_NOTAVAILABLE_HEAD")),console.log("This browser does not support PassKeys"),!1;var b=document.forms["mfa-method-edit"].querySelectorAll("input[name=\"pkRequest\"]")[0].value,c=JSON.parse(atob(b));c.challenge=Uint8Array.from(window.atob(akeeba.MFA.webauthn.base64url2base64(c.challenge)),function(a){return a.charCodeAt(0)}),c.user.id=Uint8Array.from(window.atob(c.user.id),function(a){return a.charCodeAt(0)}),c.excludeCredentials&&(c.excludeCredentials=c.excludeCredentials.map(function(a){return a.id=Uint8Array.from(window.atob(akeeba.MFA.webauthn.base64url2base64(a.id)),function(a){return a.charCodeAt(0)}),a})),navigator.credentials.create({publicKey:c}).then(function(a){var b={id:a.id,type:a.type,rawId:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.rawId)),response:{clientDataJSON:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.clientDataJSON)),attestationObject:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.attestationObject))}};document.getElementById("passkeys-method-code").value=btoa(JSON.stringify(b)),document.forms["mfa-method-edit"].submit()},function(a){akeeba.MFA.webauthn.handle_error(a)})},akeeba.MFA.webauthn.handle_error=function(a){try{document.getElementById("passkeys_button").style.disabled="null"}catch(a){}alert(a),console.log(a)},akeeba.MFA.webauthn.validate=function(){if(!("credentials"in navigator))return alert(akeeba.System.Text._("PANOPTICON_MFA_PASSKEYS_ERR_NOTAVAILABLE_HEAD")),void console.log("This browser does not support PassKeys");var a=akeeba.MFA.webauthn.authData;return a.challenge?void(a.challenge=Uint8Array.from(window.atob(akeeba.MFA.webauthn.base64url2base64(a.challenge)),function(a){return a.charCodeAt(0)}),a.allowCredentials&&(a.allowCredentials=a.allowCredentials.map(function(a){return a.id=Uint8Array.from(window.atob(akeeba.MFA.webauthn.base64url2base64(a.id)),function(a){return a.charCodeAt(0)}),a})),navigator.credentials.get({publicKey:a}).then(function(a){var b={id:a.id,type:a.type,rawId:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.rawId)),response:{authenticatorData:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.authenticatorData)),clientDataJSON:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.clientDataJSON)),signature:akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.signature)),userHandle:a.response.userHandle?akeeba.MFA.webauthn.arrayToBase64String(new Uint8Array(a.response.userHandle)):null}};document.getElementById("mfaCode").value=btoa(JSON.stringify(b)),document.forms["captive-form"].submit()},function(a){console.log(a),akeeba.MFA.webauthn.handle_error(a)})):void akeeba.MFA.webauthn.handle_error(akeeba.System.Text._("PANOPTICON_MFA_PASSKEYS_ERR_NO_STORED_CREDENTIAL"))},akeeba.MFA.webauthn.onValidateClick=function(a){return a.preventDefault(),akeeba.MFA.webauthn.authData=JSON.parse(window.atob(akeeba.System.getOptions("mfa.authData"))),document.getElementById("passkeys_button").style.disabled="disabled",akeeba.MFA.webauthn.validate(),!1},document.getElementById("passkeys-missing").classList.add("d-none"),"undefined"==typeof navigator.credentials&&(document.getElementById("passkeys-missing").classList.replace("d-none","d-block"),document.getElementById("passkeys-controls").classList.add("d-none"),document.getElementById("passkeys_button").style.disabled="disabled"),window.addEventListener("DOMContentLoaded",function(){if("validate"===akeeba.System.getOptions("mfa.pagetype")){var a=document.getElementById("passkeys_button");a.addEventListener("click",akeeba.MFA.webauthn.onValidateClick),a.focus(),document.getElementById("captive-button-submit").addEventListener("click",akeeba.MFA.webauthn.onValidateClick)}else{var b=document.getElementById("passkeys_button");b.addEventListener("click",akeeba.MFA.webauthn.setUp),b.focus()}document.querySelectorAll(".mfa_webauthn_setup").forEach(function(a){a.addEventListener("click",akeeba.MFA.webauthn.setUp)})});

//# sourceMappingURL=webauthn-mfa.min.js.map