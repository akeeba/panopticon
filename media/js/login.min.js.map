{"version":3,"file":"login.min.js","names":["handleLanguageChange","a","document","getElementById","addEventListener","language","value","url","akeeba","System","getOptions","window","location","handleLoginError","message","alert","arrayToBase64String","btoa","String","fromCharCode","apply","_toConsumableArray","base64url2base64","input","output","replace","pad","length","Error","Array","join","passkeyLogin","postURL","challengeURL","Ajax","ajax","method","data","success","rawResponse","jsonData","JSON","parse","e","error","console","log","handleLoginChallenge","xhr","concat","status","statusText","publicKey","challenge","Uint8Array","from","atob","c","charCodeAt","allowCredentials","map","id","navigator","credentials","get","then","publicKeyCredential","type","rawId","response","authenticatorData","clientDataJSON","signature","userHandle","loginURL","stringify","catch","Text","_","initPasskeyLogin","loginButtons","slice","call","querySelectorAll","debug","hasWebAuthn","forEach","button","preventDefault","classList","add","onDOMContentLoaded","readyState"],"sources":["login.js"],"sourcesContent":["/*\n * @package   panopticon\n * @copyright Copyright (c)2023-2024 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   https://www.gnu.org/licenses/agpl-3.0.txt GNU Affero General Public License, version 3 or later\n */\n\n(() =>\n{\n    const handleLanguageChange = () =>\n    {\n        document.getElementById(\"language\")\n                ?.addEventListener(\"change\", () =>\n                {\n                    const language = document.getElementById(\"language\").value;\n                    const url      = akeeba.System.getOptions(\"login.url\");\n\n                    window.location = url + language;\n                });\n    }\n\n    const handleLoginError = (message) =>\n    {\n        alert(message);\n    }\n\n    const arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\n\n    const base64url2base64 = (input) =>\n    {\n        let output = input\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\");\n\n        const pad = output.length % 4;\n\n        if (pad)\n        {\n            if (pad === 1)\n            {\n                throw new Error(\n                    \"InvalidLengthError: Input base64url string is the wrong length to determine padding\"\n                );\n            }\n            output += new Array(5 - pad).join(\"=\");\n        }\n\n        return output;\n    };\n\n    /**\n     * Initialize the passwordless login, going through the server to get the registered certificates\n     * for the user.\n     *\n     * @returns {boolean}  Always FALSE to prevent BUTTON elements from reloading the page.\n     */\n    const passkeyLogin = () =>\n    {\n        const postURL = akeeba.System.getOptions(\"passkey\").challengeURL;\n\n        akeeba.Ajax.ajax(\n            postURL,\n            {\n                method:  \"POST\",\n                data:    {},\n                success: (rawResponse) =>\n                         {\n                             let jsonData = {};\n\n                             try\n                             {\n                                 jsonData = JSON.parse(rawResponse);\n                             }\n                             catch (e)\n                             {\n                                 /**\n                                  * In case of JSON decoding failure fall through; the error will be handled in\n                                  * the login challenge handler called below.\n                                  */\n                             }\n\n                             if (jsonData.error)\n                             {\n                                 handleLoginError(jsonData.error);\n\n                                 return;\n                             }\n\n                             console.log(jsonData);\n\n                             handleLoginChallenge(jsonData);\n                         },\n                error:   (xhr) =>\n                         {\n                             handleLoginError(`${xhr.status} ${xhr.statusText}`);\n                         },\n            }\n        );\n\n        return false;\n    };\n\n    /**\n     * Handles the browser response for the user interaction with the authenticator. Redirects to an\n     * internal page which handles the login server-side.\n     *\n     * @param {  Object}  publicKey     Public key request options, returned from the server\n     */\n    const handleLoginChallenge = (publicKey) =>\n    {\n        if (!publicKey.challenge)\n        {\n            handleLoginError(akeeba.System.Text._(\"PANOPTICON_PASSKEYS_ERR_INVALID_USERNAME\"));\n\n            return;\n        }\n\n        publicKey.challenge = Uint8Array.from(\n            window.atob(base64url2base64(publicKey.challenge)), (c) => c.charCodeAt(0),\n        );\n\n        if (publicKey.allowCredentials)\n        {\n            publicKey.allowCredentials = publicKey.allowCredentials.map((data) =>\n            {\n                data.id = Uint8Array.from(window.atob(base64url2base64(data.id)), (c) => c.charCodeAt(0));\n\n                return data;\n            });\n        }\n\n        navigator.credentials.get({publicKey})\n                 .then((data) =>\n                 {\n                     const publicKeyCredential = {\n                         id:       data.id,\n                         type:     data.type,\n                         rawId:    arrayToBase64String(new Uint8Array(data.rawId)),\n                         response: {\n                             authenticatorData: arrayToBase64String(new Uint8Array(data.response.authenticatorData)),\n                             clientDataJSON:    arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                             signature:         arrayToBase64String(new Uint8Array(data.response.signature)),\n                             userHandle:        data.response.userHandle\n                                                ? arrayToBase64String(new Uint8Array(data.response.userHandle))\n                                                : null,\n                         },\n                     };\n\n                     // Send the response to your server\n\n                     window.location = `${akeeba.System.getOptions(\"passkey\").loginURL}&data=${\n                         btoa(JSON.stringify(publicKeyCredential))}`\n                 })\n                 .catch((error) =>\n                 {\n                     // Example: timeout, interaction refused...\n                     handleLoginError(error);\n                 });\n    };\n\n    const initPasskeyLogin = () =>\n    {\n        const loginButtons = [].slice.call(document.querySelectorAll(\".passkey_login_button\"));\n\n        if (!loginButtons.length)\n        {\n            console.debug('No passkey login button.');\n\n            return;\n        }\n\n        const hasWebAuthn = typeof navigator.credentials !== \"undefined\";\n\n        loginButtons.forEach((button) =>\n        {\n            if (!hasWebAuthn)\n            {\n                button.classList.add(\"d-none\");\n\n                return;\n            }\n\n            button.addEventListener(\"click\", (e) =>\n            {\n                e.preventDefault();\n\n                passkeyLogin();\n            });\n        });\n    }\n\n    const onDOMContentLoaded = () =>\n    {\n        handleLanguageChange();\n        initPasskeyLogin();\n    };\n\n    if (document.readyState === \"loading\")\n    {\n        document.addEventListener(\"DOMContentLoaded\", onDOMContentLoaded);\n    }\n    else\n    {\n        onDOMContentLoaded();\n    }\n})();"],"mappings":"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","ignoreList":[]}